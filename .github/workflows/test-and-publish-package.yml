name: test-and-publish-package

on:
  workflow_call:
    inputs:
      INSTALL_EPLUS_920:
        description: "Should I install Energy Plus 9.2.0 ?"
        required: false
        type: boolean
    secrets:
      CONDA_CHANNEL_SYSADMIN_URL:
        description: "URL containing sysadmin password to use Openergy's private conda channel."
        required: false
      AZURE_CONDA_CHANNEL_KEY:
        description: "Azure Storage Account key"
        required: true
      ADMIN_GITHUB_TOKEN:
        description: "Openergy admin github token"
        required: true

jobs:
  build:
    if: ${{ ! contains(github.event.commits[0].message, '[openergy admin]') }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
        # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
        # https://github.com/marketplace/actions/setup-miniconda#important
        working-directory: ${{ github.workspace }}
    outputs:
      REPOSITORY_NAME: ${{ steps.set-repository-name.outputs.REPOSITORY_NAME }}
      VERSION: ${{ steps.set-version.outputs.VERSION }}
    steps:
      - name: "retrieve and store repository name"
        id: set-repository-name
        run: echo "::set-output name=REPOSITORY_NAME::${{ github.event.repository.name }}"

      - name: "checkout repo" # automatically on develop
        uses: actions/checkout@v2
        with:
          path: repo  # Relative path under $GITHUB_WORKSPACE to place the repository
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }}  # we want push to be done by Openergy Admin, for branch protection

      - name: "configure git"
        run: |
          set -e
          git config --global user.name Openergy Admin
          git config --global user.email admin@openergy.fr
        working-directory: ${{ github.workspace }}/repo

      - name: "prepare conda cache"  # https://github.com/marketplace/actions/setup-miniconda#caching
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-${{ hashFiles('${{ github.workspace }}/repo/requirements.txt') }}

      - name: "retrieve version in RELEASE.md ('next' or version number)"
        id: set-version
        run: echo "::set-output name=VERSION::$(sed -n '0,/^##/s/## //p' RELEASE.md)"
        working-directory: ${{ github.workspace }}/repo

      - name: "prepare version.py"
        run: printf 'version = "${{ steps.set-version.outputs.VERSION }}"\n' > ./${{ steps.set-repository-name.outputs.REPOSITORY_NAME }}/version.py
        working-directory: ${{ github.workspace }}/repo

      - name: "add version"
        run: git add ./${{ steps.set-repository-name.outputs.REPOSITORY_NAME }}/version.py
        working-directory: ${{ github.workspace }}/repo

      - name: "install miniconda with conda-build"
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          conda-build-version: "*"
          auto-activate-base: true
          activate-environment: ""

      - name: "add openergy conda channel if secret was provided"
        run: |
          set -e
          [ -z ${{ secrets.CONDA_CHANNEL_SYSADMIN_URL }} ] || conda config --system --add channels ${{ secrets.CONDA_CHANNEL_SYSADMIN_URL }}

      - name: "prepare build info"
        run: |
          set -e
          mkdir conda-build
          # download create_meta script
          wget https://raw.githubusercontent.com/openergy/github-actions-workflows/master/.github/workflows-resources/create_meta.py -P ${{ github.workspace }}
          # create meta
          python ${{ github.workspace }}/create_meta.py conda-build ${{ steps.set-repository-name.outputs.REPOSITORY_NAME }} false
        working-directory: ${{ github.workspace }}/repo

      - name: "build"
        run: conda-build . --croot ${{ github.workspace }}/conda-build-to-upload
        working-directory: ${{ github.workspace }}/repo/conda-build

      - name: "upload build"
        uses: actions/upload-artifact@v2
        with:
          name: conda-build
          path: ${{ github.workspace }}/conda-build-to-upload
          retention-days: 1

      - name: "commit to develop"
        # !! don't change [openergy admin] in message or it will trigger a recursive workflow (see condition at
        # beginning of workflow)!!
        run: |
          set -e
          git commit -m "[openergy admin] updated version as ${{ steps.set-version.outputs.VERSION }}" || :
          # || : => works as try/except:pass (commit may fail in certain cases if code has not changed, \
          #  but it shouldn't be a problem)
          git push origin develop
        working-directory: ${{ github.workspace }}/repo

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
        # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
        # https://github.com/marketplace/actions/setup-miniconda#important
        working-directory: ${{ github.workspace }}
    needs: build
    steps:
      - name: "checkout repo"  # (automatically on develop)
        uses: actions/checkout@v2
        with:
          path: repo  # Relative path under $GITHUB_WORKSPACE to place the repository
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }}  # we want push to be done by Openergy Admin, for branch protection

      - name: "configure git"
        run: |
          set -e
          git config --global user.name Openergy Admin
          git config --global user.email admin@openergy.fr
        working-directory: ${{ github.workspace }}/repo

      - name: "download build"
        uses: actions/download-artifact@v2
        with:
          name: conda-build
          path: ${{ github.workspace }}/conda-build

      - name: "prepare miniconda cache"
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-${{ hashFiles('${{ github.workspace }}/conda-build/**') }}

      - name: "install miniconda"
        uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: defaults,conda-forge

      - name: "add openergy conda channel if secret was provided"
        run: |
          set -e
          [ -z ${{ secrets.CONDA_CHANNEL_SYSADMIN_URL }} ] || conda config --system --add channels ${{ secrets.CONDA_CHANNEL_SYSADMIN_URL }}

      - name: "install EnergyPlus 9.2.0 if required"
        if: ${{ inputs.INSTALL_EPLUS_920 }}
        run: |
          set -e
          wget -q https://github.com/NREL/EnergyPlus/releases/download/v9.2.0/EnergyPlus-9.2.0-921312fa1d-Linux-x86_64.sh
          echo "y\r" | sudo bash ./EnergyPlus-9.2.0-921312fa1d-Linux-x86_64.sh
          sudo rm ./EnergyPlus-9.2.0-921312fa1d-Linux-x86_64.sh

      - name: "install requirements"
        run: |
          set -e
          # package requirements
          mamba install -q -c ${{ github.workspace }}/conda-build ${{ needs.build.outputs.REPOSITORY_NAME }}=${{ needs.build.outputs.VERSION }}
          # tests requirements
          mamba install pytest pytest-cov

      - name: "copy and run tests"
        run: |
          set -e
          cp -r ${{ github.workspace }}/repo/tests ${{ github.workspace }}
          pytest tests  # fixme: manage coverage

  version:
    needs: [build, test]
    if: needs.build.outputs.VERSION != 'next'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
        # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
        # https://github.com/marketplace/actions/setup-miniconda#important
        working-directory: ${{ github.workspace }}
    steps:
      - name: "checkout repo"  # automatically on develop
        uses: actions/checkout@v2
        with:
          path: repo  # Relative path under $GITHUB_WORKSPACE to place the repository
          fetch-depth: 0  # must fetch all or merges will fail
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }}  # we want push to be done by Openergy Admin, for branch protection

      - name: "configure git"
        run: |
          set -e
          git config --global user.name Openergy Admin
          git config --global user.email admin@openergy.fr
        working-directory: ${{ github.workspace }}/repo

      - name: "update branches and tags"
        run: |
          set -e

          # checkout develop
          git checkout develop
          git pull  # does not seem to be up to date (which is quite odd)

          # checkout master, merge develop, push master
          git checkout master
          git pull  # make sure it is up to date
          git merge --ff-only develop
          git push origin master

          # create and push version
          echo "Versioning to version ${{ needs.build.outputs.VERSION }}"
          git tag ${{ needs.build.outputs.VERSION }}
          git push origin ${{ needs.build.outputs.VERSION }}

          # checkout develop and merge master
          git checkout develop
          git merge master

          # add and commit the next version to RELEASE.md
          # !! don't change [openergy admin] in message or it will trigger a recursive workflow (see condition at
          # beginning of workflow)!!
          sed -i "0,/^##/s/##/## next\\n\\n##/" RELEASE.md
          git commit RELEASE.md -m "[openergy admin] added ## next to RELEASE.md"

          # push develop
          git push origin develop

        working-directory: ${{ github.workspace }}/repo

  conda-upload:
    needs: [build, test, version]  # we want to make sure that versioning worked before uploading to conda channel
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    steps:
      - name: "prepare ubuntu"
        run: |
          set -e
          sudo apt-get update && sudo apt-get install -y curl software-properties-common libcurl3-gnutls

      - name: "install blobfuse"
        run: |
          set -e

          # https://docs.microsoft.com/en-us/windows-server/administration/Linux-Package-Repository-for-Microsoft-Software#ubuntu
          curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
          sudo apt-add-repository https://packages.microsoft.com/ubuntu/20.04/prod
          sudo apt-get update

          # https://docs.microsoft.com/en-us/azure/storage/blobs/storage-how-to-mount-container-linux
          sudo apt-get install -y blobfuse

      - name: "configure blobfuse"
        run: |
          set -e

          # tmp dir
          #mkdir ${{ github.workspace }}/blobfusetmp -p
          sudo mkdir ${{ github.workspace }}/ramdisk
          sudo mount -t tmpfs -o size=3g tmpfs ${{ github.workspace }}/ramdisk
          sudo mkdir ${{ github.workspace }}/ramdisk/blobfusetmp

          # connection info
          cat > ${{ github.workspace }}/fuse_connection.cfg <<EOL
          accountName condachannel
          accountKey ${{ secrets.AZURE_CONDA_CHANNEL_KEY }}
          containerName static

          EOL

          # local conda-build work directory
          mkdir /${{ github.workspace }}/conda-build

          # mount directory
          blobfuse /${{ github.workspace }}/conda-build --tmp-path=${{ github.workspace }}/ramdisk/blobfusetmp --config-file=/${{ github.workspace }}/fuse_connection.cfg -o attr_timeout=240 -o entry_timeout=240 -o negative_timeout=120

      - name: "install miniconda with conda-build"
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          conda-build-version: "*"
          auto-activate-base: true
          activate-environment: ""

      - name: "add new version build"
        uses: actions/download-artifact@v2
        with:
          name: conda-build
          path: ${{ github.workspace }}/conda-build

      - name: "update index"
        run: conda index conda-build
